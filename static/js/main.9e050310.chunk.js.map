{"version":3,"sources":["components/Footer.jsx","components/Header.jsx","components/Widget.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","src","align","href","target","index_es","icon","alt","Component","Header","Widget","library","add","faCog","faBookmark","faShareSquare","App","Header_Header","Widget_Widget","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e050310.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nexport default class Footer extends Component{\n    render() {\n        return(\n            <div className='footer'>\n                <div className=\"wrap\">\n                    <li>\n                        <div className=\"credit\">\n                            <span>Designed By</span>\n                            <img src=\"./images/Faisal_Ahmed.jpg\" align=\"Faisal Ahmed\"></img>\n                            <a href=\"https://github.com/Faisal50x\" target=\"_blank\">\n                                <h2 className=\"name\">Faisal Ahmed</h2>\n                                <div className=\"title\">Software Engineer</div>\n                            </a>\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"utilities\">\n                            <FontAwesomeIcon icon=\"cog\" className=\"icon\"/>\n                            <span>Settings</span>\n                        </div>\n                        <div className=\"utilities\">\n                            <FontAwesomeIcon icon=\"bookmark\" className=\"icon\"/>\n                            <span>Bookmark</span>\n                        </div>\n                    </li>\n                    <li>\n                        <div className=\"share\">\n                            <img src=\"./icons/share.png\" alt=\"share_icon\" />\n                        </div>\n                    </li>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React, {Component} from \"react\";\n\nexport default class Header extends Component {\n    render() {\n        return(\n            <div className=\"date_time\">\n                <span className=\"time\">02:30 AM</span>\n                <span className=\"day\">Saturday</span>\n                <span className=\"date\">05, March, 2019</span>\n            </div>\n        );\n    }\n}","import React,{Component} from \"react\";\n\nexport default class Widget extends Component{\n    render(){\n        return(\n            <div className=\"social_widget\">\n                <a href=\"https://facebook.com\" className=\"Facebook items\">\n                    <img src=\"./icons/Facebook.png\" alt=\"Facebook\" />\n                </a>\n                <a href=\"https://google.com.bd\" className=\"Google items\">\n                    <img src=\"./icons/google.png\" alt=\"Google\" />\n                </a>\n                <a href=\"https://linkedin.com\" className=\"Linkedin items\">\n                    <img src=\"./icons/linkedin.png\" alt=\"linkedin\" />\n                </a>\n                <a href=\"https://youtube.com\" className=\"Youtube items\">\n                    <img src=\"./icons/youtube.png\" alt=\"youtube\" />\n                </a>\n                <a href=\"https://www.snapchat.com\" className=\"SnapChat items\">\n                    <img src=\"./icons/snapchat.png\" alt=\"snapchat\" />\n                </a>\n                <a href=\"https://www.spotify.com\" className=\"Spotify items\">\n                    <img src=\"./icons/social-spotify.png\" alt=\"spotify\" />\n                </a>\n                <a href=\"https://vimeo.com\" className=\"Vine items\">\n                    <img src=\"./icons/vimeo.png\" alt=\"vimeo\" />\n                </a>\n                <div className=\"Amazon\">\n                    <a href=\"https://www.amazon.com\" className=\"Amazone items\">\n                        <img src=\"./icons/amazon.png\" alt=\"Amazon\" />\n                    </a>\n                    <a href=\"https://quora.com\" className=\"Quora items\">\n                        <img src=\"./icons/quora.png\" alt=\"Quora\" />\n                    </a>\n                    <a href=\"https://medium.com\" className=\"Medium items\">\n                        <img src=\"./icons/medium.png\" alt=\"spotify\" />\n                    </a>\n                </div>\n                <a href=\"https://www.twitch.tv\" className=\"twitch items\">\n                    <img src=\"./icons/twitch.png\" alt=\"twitch\" />\n                </a>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport Widget from \"./components/Widget\";\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faCog, faBookmark,faShareSquare} from \"@fortawesome/free-solid-svg-icons\";\n\nimport './App.css';\n\nlibrary.add(faCog,faBookmark,faShareSquare);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <div className=\"wrap\">\n              <Header />\n              <div className=\"location\">Dhaka, Bangladesh </div>\n              <Widget/>\n          </div>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}